test_margin_vars <- function() {

	assert.equal(NULL, margin.vars("month","day", "month"))
	assert.equal(list("month"), margin.vars(c("month","day"),, "month"))
	assert.equal(list(c("month", "year")), margin.vars(c("month","day"),"year", "month"))

	assert.equal(list(c("month", "variable", "year")), margin.vars(c("month","day"),c("variable","year"), "month"))
	assert.equal(list(c("month", "variable"), c("variable", "month", "day"), c("month", 
					"variable", "year")), margin.vars(c("month","day"),c("variable","year"), c("month", "variable")))

	assert.equal(list("month"), margin.vars("month","day", "grand_col"))
	assert.equal(list("day"), margin.vars("month","day", "grand_row"))

	assert.equal(list(c("month", "day")), margin.vars(c("month","day"),, "grand_col"))
	assert.equal(list(NULL), margin.vars(c("month","day"),, "grand_row"))
	assert.equal(list(NULL, c("month", "day")), margin.vars(c("month","day"),, c("grand_row", "grand_col")))

}

test_condense <- function() {
	names(airquality) <- tolower(names(airquality))
	aqm <- melt(airquality, id=c("month", "day"))
	df <- aqm

	assert.equal(
		sort(as.vector(tapply(df$value, df$variable, mean))),
		sort(unlist(condense(df, "variable", mean)$results))
	)

	assert.equal(
		sort(as.vector(tapply(df$value, df$variable, mean, na.rm=T))),
		sort(unlist(condense(df, "variable", mean, na.rm=T)$results))
	)

	assert.equal(
		sort(as.vector(tapply(df$value, df$month, mean, na.rm=T))),
		sort(unlist(condense(df, "month", mean, na.rm=T)$results))
	)
}